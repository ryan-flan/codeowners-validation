name: CI/CD

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - '**'

env:
  CARGO_TERM_COLOR: always
  CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

jobs:
  build-and-test:
    name: Build and Test Rust Crate
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        rust: [nightly, beta, stable]
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Lint
        run: cargo check

      - name: Run Tests
        run: cargo test --all-features

  validate-codeowners:
    name: Validate CODEOWNERS
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-deps-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-deps-

      - name: Run CODEOWNERS validation
        uses: ryan-flan/codeowners-validation@v0.3.1
        with:
          checks: |
            exists
            duplicate_patterns

  publish:
    name: Publish to crates.io and GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install cargo-release
        run: cargo install cargo-release

      - name: Extract package version
        id: pkg
        run: |
          version=$(cargo metadata --format-version 1 | jq -r '.packages[] | select(.name == "codeowners-validation") | .version')
          echo "package_version=$version" >> $GITHUB_OUTPUT

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/ryan-flan/codeowners-validation:latest
            ghcr.io/ryan-flan/codeowners-validation:${{ steps.pkg.outputs.package_version }}

      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo release --no-verify --skip-push

