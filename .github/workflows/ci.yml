name: CI/CD

on:
  push:
    branches:
      - main
      - 'releases/**'
      - '**'
    tags:
      - "v*"
  pull_request:
    branches:
      - main
      - 'releases/**'
      - '**'

env: 
  CARGO_TERM_COLOR: always
  CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

jobs:
  build-and-test:
    name: Build and Test Rust Crate
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        rust: [nightly, beta, stable]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        
      - name: Set up Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Lint
        run: cargo check

      - name: Run Tests
        run: cargo test --all-features

  validate-codeowners:
    name: Validate CODEOWNERS
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run CODEOWNERS validation
        uses: ryanjamesflanagan/codeowners-validation@v0.2.0
        with:
          checks: |
            "exists"
            "duplicate_patterns"

  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish

