name: Cargo Build & Test

on:
  push:
  pull_request:

env: 
  CARGO_TERM_COLOR: always

jobs:
  install:
    name: Rust ${{matrix.rust}} on ${{matrix.os == 'ubuntu' && 'Linux' || '???'}}
    runs-on: ${{matrix.os}}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        rust: [nightly, beta, stable]
        include:
          - os: ubuntu
            rust: 1.0.0
    timeout-minutes: 5
    steps:
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/checkout@v4
      - uses: ./
        name: Run dtolnay/rust-toolchain${{contains(matrix.rust, ' ') && ' for ' || '@'}}${{matrix.rust}}
        id: toolchain
        with:
          toolchain: ${{matrix.rust}}
      - name: Lint
        run: cargo check
      - name: Test
        run: cargo test
